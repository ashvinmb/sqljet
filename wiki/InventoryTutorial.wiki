#summary More complicated tutorial using Inventory application.
#labels Tutorial

= Introduction =

Inventory is a simple warehouse management application. It keeps a list of items and their locations (room + shelf).

You can access the source code here: http://svn.sqljet.com/repos/sqljet/trunk/sqljet-examples/inventory/

Application runs as a web server so you can connect to it using any web browser. Server is multithreaded and each request is processed in its own worker thread. Each thread opens a connection to the inventory.db database if necessary so there may be several connections open at the same time.

There are two versions of the application: the first one allows to edit a list of items and the second one adds a list of users that may borrow items. You may change the version using InventoryDB.VERSION constant. When connection to the database is opened InventoryDB checks the current version and upgrades the schema if necessary.

= UI Version 1 =

Initially a list of items is displayed:

http://sqljet.googlecode.com/svn/trunk/images/inventory/Inventory1.png

The link 'Add Item' below the items list allows to add a new item:

http://sqljet.googlecode.com/svn/trunk/images/inventory/Inventory2.png

Form values are sent to server in query string for simplicity:

http://sqljet.googlecode.com/svn/trunk/images/inventory/Inventory3.png

Links 'Edit' and 'Remove' allow to edit and delete a particular item:

http://sqljet.googlecode.com/svn/trunk/images/inventory/Inventory5.png

All requests are logged to console. You may stop the server by typing any text and pressing 'Return'. Here is the log of the above session:

<pre>
Inventory is listening at http://127.0.0.1:8333
Enter any text to shutdown.
GET / HTTP/1.1
GET /add_item HTTP/1.1
GET /add_item?name=Dictionary&description=The+big+one&room=3&shelf=55 HTTP/1.1
GET / HTTP/1.1
GET /edit_item?article=3 HTTP/1.1
GET /edit_item?name=Cup&description=My+best&room=3&shelf=1&article=3 HTTP/1.1
GET / HTTP/1.1
GET /remove_item?article=3 HTTP/1.1
GET / HTTP/1.1

Exit.
</pre>